import{_ as e,c as a,o as i,ag as n}from"./chunks/framework.BgId8OS5.js";const u=JSON.parse('{"title":"Commands","description":"","frontmatter":{"title":"Commands"},"headers":[],"relativePath":"projects/bux/commands.md","filePath":"projects/bux/commands.md","lastUpdated":1748634950000}'),t={name:"projects/bux/commands.md"};function l(r,s,p,d,o,h){return i(),a("div",null,s[0]||(s[0]=[n(`<h1 id="baseux-commands" tabindex="-1">BaseUX Commands <a class="header-anchor" href="#baseux-commands" aria-label="Permalink to &quot;BaseUX Commands&quot;">​</a></h1><p>BaseUX provides a powerful command-line interface (CLI) to streamline your development workflow. This guide covers all available commands, with special focus on the entity generation system.</p><h2 id="command-overview" tabindex="-1">Command Overview <a class="header-anchor" href="#command-overview" aria-label="Permalink to &quot;Command Overview&quot;">​</a></h2><p>BaseUX CLI provides the following commands:</p><table tabindex="0"><thead><tr><th>Command</th><th>Description</th></tr></thead><tbody><tr><td><code>bux new &lt;project-name&gt;</code></td><td>Create a new BaseUX project</td></tr><tr><td><code>bux g entity &lt;entity-name&gt; [fields]</code></td><td>Generate a new entity with CRUD operations</td></tr><tr><td><code>bux start</code> or <code>bux s</code></td><td>Start the BaseUX application server</td></tr><tr><td><code>bux update</code></td><td>Update framework core components</td></tr><tr><td><code>bux upgrade</code></td><td>Upgrade the BaseUX CLI tool</td></tr><tr><td><code>bux version</code></td><td>Display version information</td></tr></tbody></table><p>Once installed, the BaseUX CLI is accessible via the <code>bux</code> command globally and provides all the functionality needed for project scaffolding and development.</p><h2 id="creating-a-new-project" tabindex="-1">Creating a New Project <a class="header-anchor" href="#creating-a-new-project" aria-label="Permalink to &quot;Creating a New Project&quot;">​</a></h2><p>To create a new BaseUX project:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This command:</p><ol><li>Creates a new project directory</li><li>Installs all necessary dependencies</li><li>Sets up the initial project structure</li><li>Initializes Git repository</li></ol><h2 id="start-application-server" tabindex="-1">Start Application Server <a class="header-anchor" href="#start-application-server" aria-label="Permalink to &quot;Start Application Server&quot;">​</a></h2><p>BaseUX provides a command to start the application server:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or the shorthand</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> s</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="options" tabindex="-1">Options: <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options:&quot;">​</a></h3><ul><li><code>--hot-reload</code>, <code>-r</code>: Enable hot reloading using air</li><li><code>--docs</code>, <code>-d</code>: Generate Swagger documentation??</li></ul><h3 id="examples" tabindex="-1">Examples: <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples:&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start the server normally</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start with hot reloading</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start with Swagger documentation</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start with both hot reloading and Swagger docs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="entity-generation" tabindex="-1">Entity Generation <a class="header-anchor" href="#entity-generation" aria-label="Permalink to &quot;Entity Generation&quot;">​</a></h2><p>The entity generation system is one of BaseUX&#39;s most powerful features. It creates a complete set of files for managing a data entity with full CRUD operations.</p><h3 id="basic-entity-generation" tabindex="-1">Basic Entity Generation <a class="header-anchor" href="#basic-entity-generation" aria-label="Permalink to &quot;Basic Entity Generation&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> posts</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> title:string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> content:text</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publishedAt:datetime</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This command generates:</p><ol><li>A complete entity structure in <code>structures/posts/</code></li><li>TypeScript models with validation</li><li>API services for CRUD operations</li><li>Pinia store for state management</li><li>UI components (grid, table, modals)</li><li>Pages for listing and detail views</li></ol><h3 id="available-field-types" tabindex="-1">Available Field Types <a class="header-anchor" href="#available-field-types" aria-label="Permalink to &quot;Available Field Types&quot;">​</a></h3><p>When defining entity fields, you can use the following types:</p><table tabindex="0"><thead><tr><th>Type</th><th>Description</th><th>Example</th></tr></thead><tbody><tr><td><code>string</code></td><td>Text field</td><td><code>title:string</code></td></tr><tr><td><code>text</code></td><td>Longer text field</td><td><code>content:text</code></td></tr><tr><td><code>number</code></td><td>Numeric field</td><td><code>count:number</code></td></tr><tr><td><code>boolean</code></td><td>True/false field</td><td><code>isPublished:boolean</code></td></tr><tr><td><code>date</code></td><td>Date field</td><td><code>createdAt:date</code></td></tr><tr><td><code>datetime</code></td><td>Date with time</td><td><code>publishedAt:datetime</code></td></tr><tr><td><code>email</code></td><td>Email field</td><td><code>contact:email</code></td></tr><tr><td><code>password</code></td><td>Password field</td><td><code>password:password</code></td></tr><tr><td><code>url</code></td><td>URL field</td><td><code>website:url</code></td></tr><tr><td><code>select</code></td><td>Dropdown selection</td><td><code>status:select:draft,published,archived</code></td></tr><tr><td><code>relation</code></td><td>Entity relation</td><td><code>author:relation:users</code></td></tr></tbody></table><h3 id="field-options" tabindex="-1">Field Options <a class="header-anchor" href="#field-options" aria-label="Permalink to &quot;Field Options&quot;">​</a></h3><p>You can add options to fields using the following syntax:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fieldName:type:option1,option2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Common options include:</p><ul><li><code>required</code>: Field is required</li><li><code>unique</code>: Field must be unique</li><li><code>min:X</code>: Minimum value/length</li><li><code>max:X</code>: Maximum value/length</li><li><code>default:X</code>: Default value</li></ul><p>Example:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> entity</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> products</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name:string:required,min:3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> price:number:required,min:0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> category:select:electronics,clothing,food:default:electronics</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="relation-fields" tabindex="-1">Relation Fields <a class="header-anchor" href="#relation-fields" aria-label="Permalink to &quot;Relation Fields&quot;">​</a></h3><p>To create relations between entities:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> entity</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> comments</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> content:text:required</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> post:relation:posts</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user:relation:users</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This creates a comments entity with relations to both posts and users entities.</p><h2 id="component-generation" tabindex="-1">Component Generation <a class="header-anchor" href="#component-generation" aria-label="Permalink to &quot;Component Generation&quot;">​</a></h2><p>Generate a new component:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> component</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> UserProfile</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This creates:</p><ul><li><code>app/components/UserProfile.vue</code></li></ul><h2 id="composable-generation" tabindex="-1">Composable Generation <a class="header-anchor" href="#composable-generation" aria-label="Permalink to &quot;Composable Generation&quot;">​</a></h2><p>Generate a custom composable:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> composable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> useAuth</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This creates:</p><ul><li><code>app/composables/useAuth.ts</code></li></ul><h2 id="service-generation" tabindex="-1">Service Generation <a class="header-anchor" href="#service-generation" aria-label="Permalink to &quot;Service Generation&quot;">​</a></h2><p>Generate a new service:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> notification</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This creates:</p><ul><li><code>app/services/notificationService.ts</code></li></ul><h2 id="store-generation" tabindex="-1">Store Generation <a class="header-anchor" href="#store-generation" aria-label="Permalink to &quot;Store Generation&quot;">​</a></h2><p>Generate a new Pinia store:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> store</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> settings</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This creates:</p><ul><li><code>app/stores/settingsStore.ts</code></li></ul><h2 id="running-your-project" tabindex="-1">Running Your Project <a class="header-anchor" href="#running-your-project" aria-label="Permalink to &quot;Running Your Project&quot;">​</a></h2><p>After generating entities, you can run your project using the <code>bux run</code> command, which executes <code>bun run &lt;subcommand&gt;</code> for any subcommand:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start the development server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Build for production</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generate static files</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start the production server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> preview</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>This approach is more straightforward and flexible, as it works with any script defined in your package.json file.</p><p>You can also use Bun directly if you prefer:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> preview</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Note: BaseUX provides both scaffolding tools and convenient wrappers around common development commands.</p><h2 id="update-framework-components" tabindex="-1">Update Framework Components <a class="header-anchor" href="#update-framework-components" aria-label="Permalink to &quot;Update Framework Components&quot;">​</a></h2><p>To update the framework core components:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This command updates the core components of your BaseUX application without affecting your custom code.</p><h2 id="upgrade-cli-tool" tabindex="-1">Upgrade CLI Tool <a class="header-anchor" href="#upgrade-cli-tool" aria-label="Permalink to &quot;Upgrade CLI Tool&quot;">​</a></h2><p>To upgrade the BaseUX CLI tool itself:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This ensures you have the latest version of the BaseUX command-line interface.</p><h2 id="version-information" tabindex="-1">Version Information <a class="header-anchor" href="#version-information" aria-label="Permalink to &quot;Version Information&quot;">​</a></h2><p>To display version information about your BaseUX installation:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This shows the current version of the BaseUX CLI and its components.</p><h2 id="advanced-usage" tabindex="-1">Advanced Usage <a class="header-anchor" href="#advanced-usage" aria-label="Permalink to &quot;Advanced Usage&quot;">​</a></h2><h3 id="custom-templates" tabindex="-1">Custom Templates <a class="header-anchor" href="#custom-templates" aria-label="Permalink to &quot;Custom Templates&quot;">​</a></h3><p>BaseUX allows you to create custom templates for generation:</p><ol><li>Create a <code>templates</code> directory in your project</li><li>Add template files with the <code>.tmpl</code> extension</li><li>Use the <code>--template</code> flag to specify your custom template</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  product</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="extending-entities" tabindex="-1">Extending Entities <a class="header-anchor" href="#extending-entities" aria-label="Permalink to &quot;Extending Entities&quot;">​</a></h3><p>You can extend existing entities:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> entity</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> products</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --extend</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This will preserve your custom modifications while updating the base structure.</p>`,86)]))}const k=e(t,[["render",l]]);export{u as __pageData,k as default};
