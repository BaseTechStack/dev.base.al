import{_ as s,c as e,o as n,ag as i}from"./chunks/framework.BgId8OS5.js";const u=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{"title":"Getting Started"},"headers":[],"relativePath":"projects/bux/getting-started.md","filePath":"projects/bux/getting-started.md","lastUpdated":1748634950000}'),t={name:"projects/bux/getting-started.md"};function r(l,a,p,o,c,d){return n(),e("div",null,a[0]||(a[0]=[i(`<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h1><p>To start using BaseUX, after installing the CLI tool and create your first project, you can start the development server with <code>bux s</code>. Your application will be available at <code>http://localhost:3000</code> by default.</p><h3 id="project-structure" tabindex="-1">Project Structure <a class="header-anchor" href="#project-structure" aria-label="Permalink to &quot;Project Structure&quot;">​</a></h3><p>After creating a new project with <code>bux new my-app</code>, you&#39;ll have a complete application scaffold ready for development. Let&#39;s explore what you get out of the box.</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>my-app/</span></span>
<span class="line"><span>├── app/             # Core application code</span></span>
<span class="line"><span>│   ├── components/  # Global components</span></span>
<span class="line"><span>│   ├── composables/ # Global composables</span></span>
<span class="line"><span>│   ├── layouts/     # Application layouts</span></span>
<span class="line"><span>│   ├── middleware/  # Route middleware</span></span>
<span class="line"><span>│   ├── pages/       # Application routes</span></span>
<span class="line"><span>│   ├── plugins/     # Nuxt plugins</span></span>
<span class="line"><span>│   ├── services/    # API services</span></span>
<span class="line"><span>│   ├── stores/      # Pinia stores</span></span>
<span class="line"><span>│   └── types/       # TypeScript types</span></span>
<span class="line"><span>├── structures/      # Generated entity modules go here</span></span>
<span class="line"><span>├── assets/          # Static assets</span></span>
<span class="line"><span>├── public/          # Public files</span></span>
<span class="line"><span>├── nuxt.config.ts   # Nuxt configuration</span></span>
<span class="line"><span>└── package.json     # Project dependencies</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="starting-your-application" tabindex="-1">Starting Your Application <a class="header-anchor" href="#starting-your-application" aria-label="Permalink to &quot;Starting Your Application&quot;">​</a></h3><p>BaseUX provides a simple command to start your development server:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Navigate to your project directory</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start the development server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> s</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>This is a shorthand for the <code>bux start</code> command, which starts the Nuxt development server. Your application will be available at <code>http://localhost:3000</code> by default.</p><h3 id="authentication-integration" tabindex="-1">Authentication Integration <a class="header-anchor" href="#authentication-integration" aria-label="Permalink to &quot;Authentication Integration&quot;">​</a></h3><p>Your new project comes with authentication already configured to work with <a href="/projects/base/">Base</a>. The authentication system includes:</p><ul><li>Login and registration pages</li><li>Auth middleware for protected routes</li><li>User profile management</li><li>Token handling and refresh logic</li></ul><h3 id="entity-generation" tabindex="-1">Entity Generation <a class="header-anchor" href="#entity-generation" aria-label="Permalink to &quot;Entity Generation&quot;">​</a></h3><p>Now that your project is running, the next step is to generate your first entity. BaseUX&#39;s entity generation system is its most powerful feature, allowing you to create complete CRUD modules with a single command.</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generate a posts entity</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> posts</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> title:string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> content:text</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publishedAt:datetime</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>This command creates:</p><ol><li><strong>Structures Directory</strong>: A new <code>structures/posts</code> directory containing all entity-related files</li><li><strong>Components</strong>: Grid, table, and modal components for the entity</li><li><strong>Store</strong>: A Pinia store for state management</li><li><strong>Services</strong>: API service layer for communication with the backend</li><li><strong>Routes</strong>: Automatically configured routes and pages</li><li><strong>Sidebar Navigation</strong>: Automatic integration with the application sidebar</li></ol><h3 id="exploring-your-entity" tabindex="-1">Exploring Your Entity <a class="header-anchor" href="#exploring-your-entity" aria-label="Permalink to &quot;Exploring Your Entity&quot;">​</a></h3><p>After generating an entity, refresh your browser and navigate to the entity page (e.g., <code>/posts</code>). You&#39;ll see:</p><ol><li><strong>Grid/Table View</strong>: A complete UI for viewing and managing your entity</li><li><strong>CRUD Operations</strong>: Add, edit, view, and delete functionality</li><li><strong>Search and Filtering</strong>: Built-in search functionality</li><li><strong>Pagination</strong>: Automatic pagination for large datasets</li></ol><h3 id="api-integration" tabindex="-1">API Integration <a class="header-anchor" href="#api-integration" aria-label="Permalink to &quot;API Integration&quot;">​</a></h3><p>BaseUX works best with a <a href="/projects/base/">Base</a> backend, but can be configured to work with any API:</p><ol><li><p><strong>Environment Configuration</strong>: Set your API URL in the <code>.env</code> file:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>API_URL=http://localhost:8001/api</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p><strong>Service Configuration</strong>: The generated services are pre-configured to work with RESTful APIs, following the Base API conventions.</p></li><li><p><strong>Authentication</strong>: The authentication system is pre-configured to work with JWT tokens from a Base backend.</p></li></ol><h2 id="core-commands" tabindex="-1">Core Commands <a class="header-anchor" href="#core-commands" aria-label="Permalink to &quot;Core Commands&quot;">​</a></h2><h3 id="bux-new-lt-project-name-gt" tabindex="-1">bux new &lt;project-name&gt; <a class="header-anchor" href="#bux-new-lt-project-name-gt" aria-label="Permalink to &quot;bux new &amp;lt;project-name&amp;gt;&quot;">​</a></h3><p>Create a new Nuxt.js project with the BaseUX framework.</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myapp</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="bux-generate-or-bux-g" tabindex="-1">bux generate or bux g <a class="header-anchor" href="#bux-generate-or-bux-g" aria-label="Permalink to &quot;bux generate or bux g&quot;">​</a></h3><p>Generate a new entity module with fields.</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">entity-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [field:type </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">...]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="bux-start-or-bux-s" tabindex="-1">bux start or bux s <a class="header-anchor" href="#bux-start-or-bux-s" aria-label="Permalink to &quot;bux start or bux s&quot;">​</a></h3><p>Start the BaseUX application server.</p><p><strong>Options:</strong></p><ul><li><code>--hot-reload</code>, <code>-r</code>: Enable hot reloading using air</li><li><code>--docs</code>, <code>-d</code>: Generate Swagger documentation</li></ul><p><strong>Examples:</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start the server normally</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start with hot reloading</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start with Swagger documentation</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start with both hot reloading and Swagger docs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="bux-update" tabindex="-1">bux update <a class="header-anchor" href="#bux-update" aria-label="Permalink to &quot;bux update&quot;">​</a></h3><p>Update framework core components:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="bux-upgrade" tabindex="-1">bux upgrade <a class="header-anchor" href="#bux-upgrade" aria-label="Permalink to &quot;bux upgrade&quot;">​</a></h3><p>Upgrade the BaseUX CLI tool:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="bux-version" tabindex="-1">bux version <a class="header-anchor" href="#bux-version" aria-label="Permalink to &quot;bux version&quot;">​</a></h3><p>Display version information:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="project-structure-1" tabindex="-1">Project Structure <a class="header-anchor" href="#project-structure-1" aria-label="Permalink to &quot;Project Structure&quot;">​</a></h2><p>BaseUX follows a modular architecture that promotes clean code organization, uses Nuxt 3 layers inside the structures folder:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>my-app/</span></span>
<span class="line"><span>├── app/             # Core application code</span></span>
<span class="line"><span>│   ├── components/  # Global components</span></span>
<span class="line"><span>│   ├── composables/ # Global composables</span></span>
<span class="line"><span>│   ├── layouts/     # Application layouts</span></span>
<span class="line"><span>│   ├── middleware/  # Route middleware</span></span>
<span class="line"><span>│   ├── pages/       # Application routes</span></span>
<span class="line"><span>│   ├── plugins/     # Nuxt plugins</span></span>
<span class="line"><span>│   ├── services/    # API services</span></span>
<span class="line"><span>│   ├── stores/      # Pinia stores</span></span>
<span class="line"><span>│   └── types/       # TypeScript types</span></span>
<span class="line"><span>├── structures/      # Generated entity modules</span></span>
<span class="line"><span>│   └── posts/       # Example entity</span></span>
<span class="line"><span>│       ├── components/    # Entity-specific components</span></span>
<span class="line"><span>│       ├── composables/   # Entity-specific composables</span></span>
<span class="line"><span>│       ├── pages/         # Entity-specific pages</span></span>
<span class="line"><span>│       ├── services/      # Entity-specific services</span></span>
<span class="line"><span>│       ├── stores/        # Entity-specific stores</span></span>
<span class="line"><span>│       └── nuxt.config.ts # Entity layer configuration</span></span>
<span class="line"><span>├── assets/          # Static assets</span></span>
<span class="line"><span>├── public/          # Public files</span></span>
<span class="line"><span>├── nuxt.config.ts   # Nuxt configuration</span></span>
<span class="line"><span>└── package.json     # Project dependencies</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h2><h3 id="entity-generation-system" tabindex="-1">Entity Generation System <a class="header-anchor" href="#entity-generation-system" aria-label="Permalink to &quot;Entity Generation System&quot;">​</a></h3><p>The entity generation system is a cornerstone of the BaseUX framework:</p><ul><li><strong>Complete Module Generation</strong>: Creates all necessary files for full CRUD operations</li><li><strong>Automatic Sidebar Integration</strong>: Newly generated entities are automatically added to navigation</li><li><strong>Type Safety</strong>: Full TypeScript integration for type-safe development</li><li><strong>Field Type Inference</strong>: Appropriate input controls based on field types</li><li><strong>Form Validation</strong>: Built-in validation rules based on field types</li></ul><h3 id="advanced-store-pattern" tabindex="-1">Advanced Store Pattern <a class="header-anchor" href="#advanced-store-pattern" aria-label="Permalink to &quot;Advanced Store Pattern&quot;">​</a></h3><p>BaseUX implements a sophisticated store pattern using Pinia:</p><ul><li><strong>Composition-Based Design</strong>: Uses Pinia&#39;s defineStore with specialized entity methods</li><li><strong>Integrated Entity Methods</strong>: Entity-specific methods directly incorporated into the store object</li><li><strong>Consistent Interface</strong>: Components can use either generic methods (fetch, create) or entity-specific methods (fetchUsers, createUser)</li><li><strong>UI State Management</strong>: Handles view modes, pagination, and loading states</li></ul><h3 id="component-system" tabindex="-1">Component System <a class="header-anchor" href="#component-system" aria-label="Permalink to &quot;Component System&quot;">​</a></h3><p>The component system is designed for maximum reusability:</p><ul><li><strong>Flexible Prop Naming</strong>: Components accept both entity-specific and generic props</li><li><strong>Consistent Interfaces</strong>: Standardized props and events across components</li><li><strong>Responsive Design</strong>: Mobile-first approach for all components</li><li><strong>Slot-Based Customization</strong>: Extensive slot system for component customization</li></ul><h3 id="complete-entity-lifecycle-management" tabindex="-1">Complete Entity Lifecycle Management <a class="header-anchor" href="#complete-entity-lifecycle-management" aria-label="Permalink to &quot;Complete Entity Lifecycle Management&quot;">​</a></h3><p>BaseUX handles the complete lifecycle of entities:</p><ul><li><strong>Creation</strong>: Generate all necessary files with a single command</li><li><strong>Updates</strong>: Preserve custom modifications while updating base structure</li><li><strong>Destruction</strong>: Clean removal including configuration and sidebar navigation</li></ul><h2 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation&quot;">​</a></h2><p>For detailed documentation on BaseUX features and usage, refer to:</p><ul><li><a href="./commands.html">Commands</a>: Comprehensive reference for all BaseUX CLI commands</li><li><a href="./installation.html">Installation</a>: Detailed installation instructions for different environments</li><li><a href="./architecture.html">Architecture</a>: Overview of the BaseUX architecture and design principles</li></ul><h3 id="core-features" tabindex="-1">Core Features <a class="header-anchor" href="#core-features" aria-label="Permalink to &quot;Core Features&quot;">​</a></h3><ul><li><a href="./core/entity-generation.html">Entity Generation</a>: In-depth guide to the entity generation system</li><li><a href="./core/components.html">Components</a>: Documentation for the core UI components</li><li><a href="./core/stores.html">Stores</a>: Explanation of the Pinia store pattern</li><li><a href="./core/services.html">Services</a>: Guide to the service layer for API communication</li><li><a href="./core/layouts.html">Layouts</a>: Overview of the layout system</li><li><a href="./core/middleware.html">Middleware</a>: Documentation for route middleware</li><li><a href="./core/types.html">Types</a>: Reference for the TypeScript type system</li><li><a href="./core/composables.html">Composables</a>: Guide to framework composables</li></ul><h2 id="community-and-support" tabindex="-1">Community and Support <a class="header-anchor" href="#community-and-support" aria-label="Permalink to &quot;Community and Support&quot;">​</a></h2><ul><li><a href="https://github.com/BaseTechStack/bux" target="_blank" rel="noreferrer">GitHub Repository</a></li><li><a href="https://github.com/BaseTechStack/bux/issues" target="_blank" rel="noreferrer">Issue Tracker</a></li></ul><h2 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-label="Permalink to &quot;License&quot;">​</a></h2><p>BaseUX is licensed under the MIT License. See the LICENSE file for details.</p>`,70)]))}const b=s(t,[["render",r]]);export{u as __pageData,b as default};
